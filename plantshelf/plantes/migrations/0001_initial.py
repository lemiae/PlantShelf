# Generated by Django 3.2.25 on 2025-08-19 09:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EspecePlante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_commun', models.CharField(max_length=100)),
                ('nom_scientifique', models.CharField(blank=True, max_length=100, null=True)),
                ('perenual_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('frequence_arrosage_jours', models.IntegerField(default=7, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(365)])),
                ('exposition_preferee', models.CharField(choices=[('faible', 'Lumière faible'), ('indirecte', 'Lumière indirecte'), ('directe', 'Lumière directe'), ('variable', 'Variable')], default='indirecte', max_length=20)),
                ('image_design', models.ImageField(blank=True, null=True, upload_to='plantes_designs/')),
                ('couleur_pot', models.CharField(default='#8B4513', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['nom_commun'],
            },
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('exposition', models.CharField(choices=[('nord', 'Nord'), ('sud', 'Sud'), ('est', 'Est'), ('ouest', 'Ouest'), ('nord_est', 'Nord-Est'), ('nord_ouest', 'Nord-Ouest'), ('sud_est', 'Sud-Est'), ('sud_ouest', 'Sud-Ouest')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('nombre_etageres', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nom'],
                'unique_together': {('user', 'nom')},
            },
        ),
        migrations.CreateModel(
            name='PlantePossedee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_personnalise', models.CharField(blank=True, max_length=100, null=True)),
                ('etagere_numero', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('position_x', models.IntegerField(default=0)),
                ('derniere_fois_arrosee', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('espece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='plantes.especeplante')),
                ('piece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plantes', to='plantes.piece')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plantes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['piece', 'etagere_numero', 'position_x'],
            },
        ),
    ]
